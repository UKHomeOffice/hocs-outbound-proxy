apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hocs-outbound-proxy.name" . }}
  labels:
    version: {{ .Values.version }}
  {{- with .Values.deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      name: {{ include "hocs-outbound-proxy.name" . }}
  template:
    metadata:
      labels:
        {{- include "hocs-outbound-proxy.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            runAsNonRoot: true
          image: "{{ .Values.image.repository }}:{{ .Values.version }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.service.targetPort }}
            initialDelaySeconds: 5
          readinessProbe:
            tcpSocket:
              port: {{ .Values.service.targetPort }}
            initialDelaySeconds: 5
          startupProbe:
            tcpSocket:
              port: {{ .Values.service.targetPort }}
            initialDelaySeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: {{ .Values.configMap.name }}
              mountPath: /etc/squid
          lifecycle:
            preStop:
              exec:
                command: [ "sh", "-c", "sleep 20" ]
      volumes:
        - name: {{ .Values.configMap.name }}
          configMap:
            name: {{ .Values.configMap.name }}
